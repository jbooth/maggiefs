// Generated by go-rpcgen.

package mrpc

import (
	"github.com/jbooth/maggiefs/maggiefs"
	"net/rpc"
)

type NameDataIfaceService struct {
	impl maggiefs.NameDataIface
}

func NewNameDataIfaceService(impl maggiefs.NameDataIface) *NameDataIfaceService {
	return &NameDataIfaceService{impl}
}

func RegisterNameDataIfaceService(impl maggiefs.NameDataIface) error {
	return rpc.RegisterName("NameDataIface", NewNameDataIfaceService(impl))
}

type NameDataIfaceHeartBeatRequest struct {
}

type NameDataIfaceHeartBeatResponse struct {
	Stat *maggiefs.DataNodeStat
}

func (s *NameDataIfaceService) HeartBeat(request *NameDataIfaceHeartBeatRequest, response *NameDataIfaceHeartBeatResponse) (err error) {
	response.Stat, err = s.impl.HeartBeat()
	return
}

type NameDataIfaceAddBlockRequest struct {
	Blk       maggiefs.Block
	VolId     uint32
	Fallocate bool
}

type NameDataIfaceAddBlockResponse struct {
}

func (s *NameDataIfaceService) AddBlock(request *NameDataIfaceAddBlockRequest, response *NameDataIfaceAddBlockResponse) (err error) {
	err = s.impl.AddBlock(request.Blk, request.VolId, request.Fallocate)
	return
}

type NameDataIfaceRmBlockRequest struct {
	Id    uint64
	VolId uint32
}

type NameDataIfaceRmBlockResponse struct {
}

func (s *NameDataIfaceService) RmBlock(request *NameDataIfaceRmBlockRequest, response *NameDataIfaceRmBlockResponse) (err error) {
	err = s.impl.RmBlock(request.Id, request.VolId)
	return
}

type NameDataIfaceTruncBlockRequest struct {
	Blk     maggiefs.Block
	VolId   uint32
	NewSize uint32
}

type NameDataIfaceTruncBlockResponse struct {
}

func (s *NameDataIfaceService) TruncBlock(request *NameDataIfaceTruncBlockRequest, response *NameDataIfaceTruncBlockResponse) (err error) {
	err = s.impl.TruncBlock(request.Blk, request.VolId, request.NewSize)
	return
}

type NameDataIfaceBlockReportRequest struct {
	VolId uint32
}

type NameDataIfaceBlockReportResponse struct {
	Blocks []maggiefs.Block
}

func (s *NameDataIfaceService) BlockReport(request *NameDataIfaceBlockReportRequest, response *NameDataIfaceBlockReportResponse) (err error) {
	response.Blocks, err = s.impl.BlockReport(request.VolId)
	return
}

type NameDataIfaceClient struct {
	client  *rpc.Client
	service string
}

func NewNameDataIfaceClient(client *rpc.Client) *NameDataIfaceClient {
	return &NameDataIfaceClient{client, "NameDataIface"}
}

func (_c *NameDataIfaceClient) HeartBeat() (stat *maggiefs.DataNodeStat, err error) {
	_request := &NameDataIfaceHeartBeatRequest{}
	_response := &NameDataIfaceHeartBeatResponse{}
	err = _c.client.Call(_c.service+".HeartBeat", _request, _response)
	return _response.Stat, err
}

func (_c *NameDataIfaceClient) AddBlock(blk maggiefs.Block, volId uint32, fallocate bool) (err error) {
	_request := &NameDataIfaceAddBlockRequest{blk, volId, fallocate}
	_response := &NameDataIfaceAddBlockResponse{}
	err = _c.client.Call(_c.service+".AddBlock", _request, _response)
	return err
}

func (_c *NameDataIfaceClient) RmBlock(id uint64, volId uint32) (err error) {
	_request := &NameDataIfaceRmBlockRequest{id, volId}
	_response := &NameDataIfaceRmBlockResponse{}
	err = _c.client.Call(_c.service+".RmBlock", _request, _response)
	return err
}

func (_c *NameDataIfaceClient) TruncBlock(blk maggiefs.Block, volId uint32, newSize uint32) (err error) {
	_request := &NameDataIfaceTruncBlockRequest{blk, volId, newSize}
	_response := &NameDataIfaceTruncBlockResponse{}
	err = _c.client.Call(_c.service+".TruncBlock", _request, _response)
	return err
}

func (_c *NameDataIfaceClient) BlockReport(volId uint32) (blocks []maggiefs.Block, err error) {
	_request := &NameDataIfaceBlockReportRequest{volId}
	_response := &NameDataIfaceBlockReportResponse{}
	err = _c.client.Call(_c.service+".BlockReport", _request, _response)
	return _response.Blocks, err
}
